#!/usr/bin/env bash
# Authors: Thiagos Dasilva, Gabriel Theuws
# Translate : Gabriel Theuws
# Contact: gaby.theuws@gmail.com
# URL origin: https://github.com/thiggy01/ubuntu-20.04-change-gdm-background
# URL translation: https://github.com/Amiralgaby/ubuntu-change-gdm-background
# =================================================================== #

usage () {
    cat << EOF
Utilisation avec privilèges administrateur :
  $0 [CONTENT] [OPTIONS]

CONTENT :
  /chemin/du/fichier.[jpg|png]  -   Chemin vers une image
  Couleur en hexadécimal        -   Code en hexadécimal comme "44ff22" (couleur unie)

OPTIONS :
  --cache-filigrane             -   Cache le logo Ubuntu sur l'écran de connexion
                                    et par la même occasion celui du boot
  --restore                     -   Restaure l'ancien thème
EOF
}

[ "$1" == "-h" ] && usage && exit 0

# Check if script is run by root.
if [ "$(id -u)" -ne 0 ] ; then
    echo -e 'Ce script doit être exécuté en tant que root ou avec la commande sudo.\n' >&2
    usage
    exit 1
fi

# on suppose vrai l'existence du fichier
. /etc/os-release || exit 1

# Check si l'option --cache-filigrane à été donnée
for arg in "$@"; do
    if [ "$arg" == "--cache-filigrane" ]; then
        logoPath="/usr/share/plymouth/ubuntu-logo.png"
        [ -f $logoPath ] && mv $logoPath "$logoPath.bak"
        [ $# -eq 1 ] && shift
    fi
done

# Check if glib 2.0 development libraries are installed.
command -v glib-compile-resources >/dev/null 2>&1 || { 
    echo "La commande glib-compile-resources n'a pas été trouvée" >&2
    echo "Ce script ne peut pas fonctionner sans les bibliothèques nécessaires" >&2
    exit 1
}

# Assign the default gdm theme file path.

if [ "$NAME" == 'Ubuntu' ]; then
    gdm3Resource=/usr/share/gnome-shell/theme/Yaru/gnome-shell-theme.gresource
elif [ "$NAME" == 'Pop' ]; then
    gdm3Resource=/usr/share/gnome-shell/theme/Pop/gnome-shell-theme.gresource
fi

# Create a backup file of the original theme if there isn't one.
[ ! -f "$gdm3Resource"~ ] && cp "$gdm3Resource" "$gdm3Resource~"

# Restore backup function.
restore () {
    if mv "$gdm3Resource~" "$gdm3Resource"; then
        chmod 644 "$gdm3Resource"
        echo "L'arrière-plan a été restauré avec succès."
        exit 0
    fi
}

# Restore the original gdm3 theme.
[ "$1" == "--restore" ] && restore

#Define main variables.
gdm3xml="${gdm3Resource##*/}".xml
workDir="/tmp/gdm3-theme"
pathXML="$workDir"/theme/"$gdm3xml"
# Create directories from resource list.
CreateDirs() {
    for resource in $(gresource list "$gdm3Resource~"); do
        resource="${resource#\/org\/gnome\/shell\/}"
        if [ ! -d "$workDir"/"${resource%/*}" ]; then
            mkdir -p "$workDir"/"${resource%/*}"
        fi
    done
}

# Extract resources from binary file.
ExtractRes() {
    for resource in $(gresource list "$gdm3Resource~"); do
        gresource extract "$gdm3Resource~" "$resource" > \
            "$workDir"/"${resource#\/org\/gnome\/shell\/}"
    done
}

# Compile resources into a gresource binary file.
CompileMoveRes() {

    glib-compile-resources --sourcedir=$workDir/theme/ "$pathXML"

    # Move the generated binary file to the gnome-shell folder.

    if mv $workDir/theme/gnome-shell-theme.gresource $gdm3Resource; then
        # Solve a permission change issue (thanks to @huepf from github).
        chmod 644 "$gdm3Resource"
        echo "L'arrière-plan de l'écran de connexion a changé avec succès."
        read -rp 'Voulez-vous relancer la session pour voir votre nouvel arrière-plan ?
        (TOUTES les applications seront stopées)  (o/n) :' -n 1
        echo
        # If change was successful apply ask for gdm restart.
        if [[ "$REPLY" =~ [oO] ]]; then
            service gdm restart
        fi
    else
        # If something went wrong, restore backup file.
        echo "quelque chose s'est mal passé." >&2
        restore
        echo "Aucun changement n'a été appliqué"
    fi

    # Remove temporary directories and files.
    rm -r "$workDir"
    exit 0
}

# Permet de demander à l'utilisateur de sélectionner une image s'il n'en a pas défini une en paramètre
# Si c'est un code aucune demande ne sera faite
imageOuCode="$1"
if [ -z "$imageOuCode" ]
then
    outilDialogue=""
    if command -v yad > /dev/null;then outilDialogue="yad";
    elif command -v zenity > /dev/null;then outilDialogue="zenity";fi
    if [[ "$outilDialogue" != "" ]]
    then
	    comm='zenity --file-selection --title "Séléctionnez une image" --file-filter "Fichiers Images (*.jpg,*.png) | *.jpg *.png"'
	    if [ -n "$SUDO_USER" ]
	    then
		    imageOuCode="$(su "$SUDO_USER" -c "$comm")" # permet d'avoir une meilleure expérience avec les dossiers appartenant à l'user
	    else
		    imageOuCode="$($comm)"
	    fi
    else
        echo "Vous n'avez ni yad, ni zenity d'installé"
        usage
        exit 0
    fi
fi

# Génére les fichiers pour le thème
GenerateThemeFiles() {
    
    oldBg='#lockDialogGroup \{.*?\}'
    perl -i -0777 -pe "s/$oldBg/$1/s" "$workDir"/theme/gdm3.css
    
    filesXML=""
    for file in $(gresource list "$gdm3Resource~"); do
        filesXML="$filesXML
        	<file>${file#\/org\/gnome/shell\/theme\/}</file>"
    done
    
    [ -n "$2" ] && filesXML="$filesXML
    		<file>$2</file>"

cat <<EOF > "$pathXML"
<?xml version="1.0" encoding="UTF-8"?>
<gresources>
    <gresource prefix="/org/gnome/shell/theme">
    	$filesXML
    </gresource>
</gresources>
EOF

}

# Test if argument is an image file.
if [[ $(file --mime-type -b "$imageOuCode") == image/*g ]]; then
    
    CreateDirs
    ExtractRes

    gdmBgImg="$(realpath "$imageOuCode")"
    
    # Copy selected image to the resources directory.
    cp "$gdmBgImg" "$workDir"/theme

    imgFile="${gdmBgImg##*/}"

    # Change gdm background to the image you submited.
    newBg="#lockDialogGroup {
        background: url('resource:\/\/\/org\/gnome\/shell\/theme\/$imgFile');
    background-size: cover; }"
    
    GenerateThemeFiles "$newBg" "$imgFile"
    CompileMoveRes

elif [[ "$imageOuCode" =~ ^([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$ ]]; then

    CreateDirs
    ExtractRes

    # Change gdm background to the color you submited.
    newBg="#lockDialogGroup {
        background: #$imageOuCode;
    background-size: cover; }"

    GenerateThemeFiles "$newBg"
    CompileMoveRes

else
    # Si ce ni un fichier valide, ni un code héxadécimal, afficher ce message
    echo "L'image n'a pas été trouvée ou vous avez renseigné un mauvais code hexadécimal" >&2
    echo "S'il vous plaît, donnez un chemin vers une image .jpg ou .png ou un code hexadécimal valide" >&2
fi
